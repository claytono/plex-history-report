[build-system]
requires = ["setuptools>=42.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "plex-history-report"
version = "0.1.0"
description = "Tool to track Plex TV show watch statistics"
readme = "README.md"
license = { text = "GPL-3.0-or-later" }
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
]
dependencies = ["plexapi>=4.15.0", "rich>=13.0.0", "pyyaml>=6.0"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "coverage>=7.0.0",             # Added direct dependency on coverage.py
    "codecov>=2.1.13",
    "ruff>=0.3.0",                 # Used for both linting and formatting (replaces black)
    "isort>=5.12.0",
    "ssort>=0.14.0",               # Added for statement sorting
    "pyright>=1.1.400",            # Added for static type checking
    "pymarkdownlnt>=0.9.0",
    "shellcheck-py>=0.9.0",
    "radon>=6.0.0",                # Added for code complexity analysis
    "xenon>=0.9.0",                # Added for CI-focused complexity checking
    "pre-commit>=3.5.0",           # Added for pre-commit hooks
    "editorconfig-checker>=3.2.1", # Added for editorconfig checking
]

[project.scripts]
plex-history-report = "plex_history_report.cli:main"

[tool.setuptools]
packages = ["plex_history_report", "plex_history_report.formatters"]

[tool.ruff]
target-version = "py38"
line-length = 100

[tool.ruff.lint]
select = [
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
    "ARG",  # flake8-unused-arguments
    "PTH",  # use pathlib
    "PERF", # perflint
]
ignore = [
    "E501", # line too long (handled by formatter)
]

[tool.ruff.format]
docstring-code-format = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"

[tool.pyright]
include = ["plex_history_report", "tests"]
exclude = [
    "**/__pycache__",
    "**/.git",
]
reportMissingImports = false  # Changed to match pyrightconfig.json
reportMissingModuleSource = false
reportMissingTypeStubs = false
pythonVersion = "3.8"
typeCheckingMode = "basic"
strictParameterNoneValue = false
reportOptionalCall = false
reportOptionalMemberAccess = false
reportOptionalSubscript = false
reportOptionalIterable = false
reportOptionalContextManager = false
reportOptionalOperand = false

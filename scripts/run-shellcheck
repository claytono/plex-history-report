#!/bin/bash
# Script to run ShellCheck linter on shell scripts

# Exit on any error
set -e

# Ensure uv is available
if ! command -v uv &>/dev/null; then
    echo "Error: uv is not installed or not in PATH"
    echo "Visit https://github.com/astral-sh/uv for installation instructions"
    exit 1
fi

# Process arguments to look for --check flag
# (shellcheck doesn't have a "check-only" mode like shfmt,
#  but we still filter it out to prevent errors)
SHELL_ARGS=()
for arg in "$@"; do
    if [[ "$arg" != "--check" ]]; then
        SHELL_ARGS+=("$arg")
    fi
done

# Default paths to check if no file arguments were provided
if [ ${#SHELL_ARGS[@]} -eq 0 ]; then
    # Use a more portable approach to find shell scripts
    while IFS= read -r file; do
        # Check if file is executable
        if [ -x "$file" ] && [ -f "$file" ]; then
            # Only include files with bash shebang
            if head -n 1 "$file" | grep -q "^#!/.*\(bash\|sh\)"; then
                SHELL_ARGS+=("$file")
            fi
        fi
    done < <(find bin scripts -type f -not -path "*/\.*")
fi

# Run ShellCheck with uv run
echo "Running shellcheck on: ${SHELL_ARGS[*]}"
if ! uv run shellcheck-py shellcheck "${SHELL_ARGS[@]}"; then
    echo -e "\nShell script linting found issues."
    exit 1
fi

echo -e "\nShell script linting completed successfully."
